{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/mrefermat/anaconda3/lib/python3.6/site-packages/statsmodels/compat/pandas.py:56: FutureWarning: The pandas.core.datetools module is deprecated and will be removed in a future version. Please use the pandas.tseries module instead.\n",
      "  from pandas.core import datetools\n"
     ]
    }
   ],
   "source": [
    "%matplotlib inline\n",
    "import pandas as pd\n",
    "from tsmom_model import *\n",
    "import numpy as np\n",
    "from datetime import datetime\n",
    "import PPCA_MR3 as p\n",
    "from linearmodels.asset_pricing import LinearFactorModel\n",
    "import statsmodels.api as sm"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "import pylab\n",
    "sns.set(font_scale=2)\n",
    "pylab.rcParams['figure.figsize'] = (24, 18)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Hand cleansed\n",
    "Hand cleaned to removed duplicates"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/mrefermat/git/FinancePhD/LiquidityMomentum/tsmom_model.py:158: FutureWarning: how in .resample() is deprecated\n",
      "the new syntax is .resample(...).last()\n",
      "  data=pd.read_csv('./Price.csv',index_col=0,parse_dates=['Date']).resample(rule='d',how='last')\n",
      "/Users/mrefermat/git/FinancePhD/LiquidityMomentum/tsmom_model.py:160: FutureWarning: how in .resample() is deprecated\n",
      "the new syntax is .resample(...).last()\n",
      "  qd=pd.read_csv('./liquid_contracts.csv',index_col=0,parse_dates=['Date']).resample(rule='d',how='last')\n"
     ]
    }
   ],
   "source": [
    "cleansed=load_amihud_markets_price()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Amihud methodology\n",
    "\n",
    "Amihud (2002) developed the illiquidity measure expressed by:\n",
    "\n",
    "$$ Amihud =\\frac{1}{N} \\sum \\frac{|r_t|}{\\text{dvol}_t} $$\n",
    "\n",
    "where $r_t$ is the return on day $t$ and $Volume_t$ is the dollar volume on day $t$. \n",
    "\n",
    "The benefit of taking the daily return is to weight the move by change of price and the volume.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/mrefermat/git/FinancePhD/LiquidityMomentum/tsmom_model.py:42: FutureWarning: how in .resample() is deprecated\n",
      "the new syntax is .resample(...).mean()\n",
      "  data=pd.read_csv('./Volume.csv',index_col=0,parse_dates=['Date']).resample(rule='d',how='mean')\n",
      "/Users/mrefermat/git/FinancePhD/LiquidityMomentum/tsmom_model.py:44: FutureWarning: how in .resample() is deprecated\n",
      "the new syntax is .resample(...).sum()\n",
      "  v=pd.read_csv('./volume_data.csv',index_col=0,parse_dates=['Date']).resample(rule='d',how='sum')\n",
      "/Users/mrefermat/git/FinancePhD/LiquidityMomentum/tsmom_model.py:46: FutureWarning: pd.rolling_mean is deprecated for DataFrame and will be removed in a future version, replace with \n",
      "\tDataFrame.rolling(window=250,min_periods=100,center=False).mean()\n",
      "  volume=pd.rolling_mean(v,250,min_periods=100).resample(rule='d',how='mean')[:'2016']\n",
      "/Users/mrefermat/git/FinancePhD/LiquidityMomentum/tsmom_model.py:46: FutureWarning: how in .resample() is deprecated\n",
      "the new syntax is .resample(...).mean()\n",
      "  volume=pd.rolling_mean(v,250,min_periods=100).resample(rule='d',how='mean')[:'2016']\n",
      "/Users/mrefermat/git/FinancePhD/LiquidityMomentum/tsmom_model.py:49: FutureWarning: pd.rolling_mean is deprecated for Series and will be removed in a future version, replace with \n",
      "\tSeries.rolling(window=250,min_periods=50,center=False).mean()\n",
      "  volume[name]=pd.rolling_mean(v2[x],250,min_periods=50).resample(rule='d',how='mean')\n",
      "/Users/mrefermat/git/FinancePhD/LiquidityMomentum/tsmom_model.py:49: FutureWarning: how in .resample() is deprecated\n",
      "the new syntax is .resample(...).mean()\n",
      "  volume[name]=pd.rolling_mean(v2[x],250,min_periods=50).resample(rule='d',how='mean')\n",
      "/Users/mrefermat/git/FinancePhD/LiquidityMomentum/tsmom_model.py:76: FutureWarning: how in .resample() is deprecated\n",
      "the new syntax is .resample(...).last()\n",
      "  fx=fx.resample(rule='d',how='last')\n",
      "/Users/mrefermat/git/FinancePhD/LiquidityMomentum/tsmom_model.py:77: FutureWarning: how in .resample() is deprecated\n",
      "the new syntax is .resample(...).last()\n",
      "  px=cleansed.resample(rule='d',how='last')\n",
      "/Users/mrefermat/git/FinancePhD/LiquidityMomentum/tsmom_model.py:85: FutureWarning: how in .resample() is deprecated\n",
      "the new syntax is .resample(...).mean()\n",
      "  x= (cleansed.pct_change().abs()/ total_vol).resample(rule='m',how='mean')\n"
     ]
    }
   ],
   "source": [
    "amihud=calculate_amihud_liquidity(cleansed)[:'2016'] "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/mrefermat/git/FinancePhD/LiquidityMomentum/tsmom_model.py:273: FutureWarning: pd.rolling_mean is deprecated for DataFrame and will be removed in a future version, replace with \n",
      "\tDataFrame.rolling(window=100000000,min_periods=3,center=False).mean()\n",
      "  return (df-pd.rolling_mean(df,100000000,min_periods=min_per))/pd.rolling_std(df,100000000,min_periods=min_per)\n",
      "/Users/mrefermat/git/FinancePhD/LiquidityMomentum/tsmom_model.py:273: FutureWarning: pd.rolling_std is deprecated for DataFrame and will be removed in a future version, replace with \n",
      "\tDataFrame.rolling(window=100000000,min_periods=3,center=False).std()\n",
      "  return (df-pd.rolling_mean(df,100000000,min_periods=min_per))/pd.rolling_std(df,100000000,min_periods=min_per)\n"
     ]
    }
   ],
   "source": [
    "data=calc_zscore_expanding_window(amihud.dropna(how='all'),3).dropna(how='all')\n",
    "sector_zscores={}\n",
    "d_map=sector_map(amihud)\n",
    "for sect in d_map.keys():\n",
    "    sector_zscores[sect]=data[d_map[sect]].dropna(how='all')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/mrefermat/anaconda3/lib/python3.6/site-packages/ipykernel_launcher.py:4: FutureWarning: how in .resample() is deprecated\n",
      "the new syntax is .resample(...).last()\n",
      "  after removing the cwd from sys.path.\n"
     ]
    }
   ],
   "source": [
    "sector_rtns={}\n",
    "d_map=sector_map(amihud)\n",
    "for sect in d_map.keys():\n",
    "    sector_rtns[sect]=np.log(cleansed[d_map[sect]].resample(rule='m',how='last')).diff().dropna(how='all')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/mrefermat/git/FinancePhD/LiquidityMomentum/tsmom_model.py:224: FutureWarning: how in .resample() is deprecated\n",
      "the new syntax is .resample(...).median()\n",
      "  mkts=quantile_columns(rank_data.resample(rule='a',how='median'),year,number_of_buckets,i)\n",
      "/Users/mrefermat/git/FinancePhD/LiquidityMomentum/tsmom_model.py:225: FutureWarning: how in .resample() is deprecated\n",
      "the new syntax is .resample(...).last()\n",
      "  rtns = price_data.resample(rule='m',how='last')[mkts].pct_change()[str(y+1)].mean(axis=1)\n"
     ]
    }
   ],
   "source": [
    "sector_portfolio_sorts={}\n",
    "amihud_values={}\n",
    "for s in sector_zscores.keys():\n",
    "    sector_portfolio_sorts[s],amihud_values[s]=quantile_portfolios_annual_with_rank(sector_zscores[s],cleansed,5)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Acharya and Pedersen (2005) pricing levels of liquidity and liquidity risk\n",
    "$$E_t(r_{t+1}^i- r_f) =  \\alpha + \\kappa E_t(c_{t+1}^i) + \\lambda_t(\\beta_t + \\beta_t^{L1} - \\beta_t^{L2} - \\beta_t^{L3}) $$\n",
    "where\n",
    "\n",
    "* $c_t$:  Liquidity cost \n",
    "* $\\beta_t^{L1}$:  Commonality in liquidity with the market, $cov(c^i,c^M)$\n",
    "* $\\beta_t^{L2}$:  Return sensitivity to market liquidity, $cov(r^i,c^M)$\n",
    "* $\\beta_t^{L3}$:  Liquidity sensitivity to market returns, $cov(c^i,r^M)$\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Adding expected cost"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/mrefermat/anaconda3/lib/python3.6/site-packages/ipykernel_launcher.py:7: FutureWarning: how in .resample() is deprecated\n",
      "the new syntax is .resample(...).last()\n",
      "  import sys\n",
      "/Users/mrefermat/anaconda3/lib/python3.6/site-packages/ipykernel_launcher.py:12: FutureWarning: pd.rolling_corr is deprecated for Series and will be removed in a future version, replace with \n",
      "\tSeries.rolling(window=12,min_periods=12).corr(other=<Series>)\n",
      "  if sys.path[0] == '':\n",
      "/Users/mrefermat/anaconda3/lib/python3.6/site-packages/ipykernel_launcher.py:13: FutureWarning: pd.rolling_corr is deprecated for Series and will be removed in a future version, replace with \n",
      "\tSeries.rolling(window=12,min_periods=12).corr(other=<Series>)\n",
      "  del sys.path[0]\n",
      "/Users/mrefermat/anaconda3/lib/python3.6/site-packages/ipykernel_launcher.py:14: FutureWarning: pd.rolling_corr is deprecated for Series and will be removed in a future version, replace with \n",
      "\tSeries.rolling(window=12,min_periods=12).corr(other=<Series>)\n",
      "  \n"
     ]
    }
   ],
   "source": [
    "final_res={}\n",
    "for sec in ['Equities', 'Commodities', 'Fixed Income']:\n",
    "    sector_res=pd.DataFrame()\n",
    "    for bucket in ['0','1','2','3','4']:\n",
    "        portfolio_rtn=sector_portfolio_sorts[sec][bucket]\n",
    "        portfolio_amihud=amihud_values[sec][bucket]\n",
    "        market=cleansed[sector_zscores[sec].columns].resample(rule='m',how='last').pct_change().median(axis=1).dropna()\n",
    "        market_amihud=amihud[sector_zscores[sec].columns].median(axis=1)\n",
    "        factor=pd.DataFrame()\n",
    "        factor['Market']=market\n",
    "        factor['E(c_t)']=portfolio_amihud\n",
    "        factor['Factor1']=pd.rolling_corr(portfolio_amihud,market_amihud,12,min_periods=12)\n",
    "        factor['Factor2']=pd.rolling_corr(portfolio_rtn,market_amihud,12,min_periods=12)\n",
    "        factor['Factor3']=pd.rolling_corr(portfolio_amihud,market,12,min_periods=12)\n",
    "        ind=portfolio_rtn['2001':].index\n",
    "        #res=sm.OLS(portfolio_rtn.loc[ind],sm.add_constant(factor.loc[ind])).fit(cov_type='HAC',cov_kwds={'maxlags':1})\n",
    "        res=sm.OLS(portfolio_rtn.loc[ind],factor.loc[ind]).fit(cov_type='HAC',cov_kwds={'maxlags':1})\n",
    "        sector_res['Portfolio '+bucket]=res.params\n",
    "        sector_res['Tstat'+bucket]=res.tvalues\n",
    "    final_res[sec]=sector_res"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "dict_keys(['Equities', 'Commodities', 'Fixed Income'])"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "final_res.keys()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\\begin{tabular}{lrrrrr}\n",
      "\\toprule\n",
      "{} &  Market &  E(c\\_t) &  Factor1 &  Factor2 &  Factor3 \\\\\n",
      "\\midrule\n",
      "Portfolio 0 &    0.92 &   -0.00 &    -0.01 &     0.01 &    -0.01 \\\\\n",
      "Tstat0      &    9.88 &   -0.77 &    -1.14 &     0.46 &    -0.81 \\\\\n",
      "Portfolio 1 &    0.82 &   -0.01 &    -0.00 &     0.00 &     0.01 \\\\\n",
      "Tstat1      &   12.13 &   -2.95 &    -0.02 &     0.14 &     1.18 \\\\\n",
      "Portfolio 2 &    1.04 &   -0.00 &    -0.00 &    -0.00 &     0.00 \\\\\n",
      "Tstat2      &   34.59 &   -1.78 &    -0.51 &    -0.23 &     0.10 \\\\\n",
      "Portfolio 3 &    0.86 &   -0.00 &     0.00 &    -0.00 &     0.01 \\\\\n",
      "Tstat3      &   24.83 &   -1.69 &     0.74 &    -0.83 &     1.22 \\\\\n",
      "Portfolio 4 &    0.95 &   -0.00 &     0.00 &    -0.00 &    -0.00 \\\\\n",
      "Tstat4      &   30.94 &   -1.59 &     0.83 &    -0.21 &    -0.20 \\\\\n",
      "\\bottomrule\n",
      "\\end{tabular}\n",
      "\n",
      "\\begin{tabular}{lrrrrr}\n",
      "\\toprule\n",
      "{} &  Market &  E(c\\_t) &  Factor1 &  Factor2 &  Factor3 \\\\\n",
      "\\midrule\n",
      "Portfolio 0 &    1.20 &    0.00 &     0.01 &     0.00 &     0.00 \\\\\n",
      "Tstat0      &   23.72 &    1.21 &     1.67 &     0.37 &     0.58 \\\\\n",
      "Portfolio 1 &    1.01 &   -0.01 &    -0.01 &    -0.01 &    -0.01 \\\\\n",
      "Tstat1      &   16.73 &   -1.46 &    -0.83 &    -1.74 &    -0.89 \\\\\n",
      "Portfolio 2 &    0.95 &   -0.01 &    -0.01 &    -0.01 &    -0.01 \\\\\n",
      "Tstat2      &   16.62 &   -1.66 &    -1.43 &    -1.49 &    -1.44 \\\\\n",
      "Portfolio 3 &    1.09 &   -0.00 &    -0.00 &    -0.01 &    -0.00 \\\\\n",
      "Tstat3      &   15.81 &   -0.31 &    -0.28 &    -0.84 &    -0.14 \\\\\n",
      "Portfolio 4 &    1.07 &    0.00 &     0.00 &    -0.00 &    -0.00 \\\\\n",
      "Tstat4      &   17.75 &    0.64 &     0.13 &    -0.47 &    -0.14 \\\\\n",
      "\\bottomrule\n",
      "\\end{tabular}\n",
      "\n",
      "\\begin{tabular}{lrrrrr}\n",
      "\\toprule\n",
      "{} &  Market &  E(c\\_t) &  Factor1 &  Factor2 &  Factor3 \\\\\n",
      "\\midrule\n",
      "Portfolio 0 &    2.54 &   -0.00 &    -0.00 &     0.00 &     0.01 \\\\\n",
      "Tstat0      &    4.74 &   -1.73 &    -0.59 &     0.73 &     2.09 \\\\\n",
      "Portfolio 1 &    2.21 &   -0.00 &    -0.00 &     0.00 &    -0.00 \\\\\n",
      "Tstat1      &    7.41 &   -1.17 &    -2.28 &     0.34 &    -1.01 \\\\\n",
      "Portfolio 2 &    1.88 &   -0.00 &    -0.00 &    -0.00 &     0.00 \\\\\n",
      "Tstat2      &    8.13 &   -1.61 &    -1.44 &    -1.37 &     1.61 \\\\\n",
      "Portfolio 3 &    1.66 &    0.00 &     0.00 &    -0.00 &    -0.00 \\\\\n",
      "Tstat3      &    8.17 &    0.44 &     0.62 &    -0.16 &    -1.88 \\\\\n",
      "Portfolio 4 &    2.73 &    0.00 &     0.00 &    -0.00 &     0.00 \\\\\n",
      "Tstat4      &    8.72 &    0.17 &     0.83 &    -0.31 &     0.22 \\\\\n",
      "\\bottomrule\n",
      "\\end{tabular}\n",
      "\n"
     ]
    }
   ],
   "source": [
    "for sec in final_res.keys():\n",
    "    print(final_res[sec].round(2).T.to_latex())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# First diff changes to innovations of liquidity\n",
    "\n",
    "Using a first difference approach instead of an AR(2) residual"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/mrefermat/anaconda3/lib/python3.6/site-packages/ipykernel_launcher.py:5: FutureWarning: how in .resample() is deprecated\n",
      "the new syntax is .resample(...).last()\n",
      "  \"\"\"\n",
      "/Users/mrefermat/anaconda3/lib/python3.6/site-packages/ipykernel_launcher.py:10: FutureWarning: pd.rolling_corr is deprecated for Series and will be removed in a future version, replace with \n",
      "\tSeries.rolling(window=24,min_periods=12).corr(other=<Series>)\n",
      "  # Remove the CWD from sys.path while we load stuff.\n",
      "/Users/mrefermat/anaconda3/lib/python3.6/site-packages/ipykernel_launcher.py:11: FutureWarning: pd.rolling_corr is deprecated for Series and will be removed in a future version, replace with \n",
      "\tSeries.rolling(window=24,min_periods=12).corr(other=<Series>)\n",
      "  # This is added back by InteractiveShellApp.init_path()\n",
      "/Users/mrefermat/anaconda3/lib/python3.6/site-packages/ipykernel_launcher.py:12: FutureWarning: pd.rolling_corr is deprecated for Series and will be removed in a future version, replace with \n",
      "\tSeries.rolling(window=24,min_periods=12).corr(other=<Series>)\n",
      "  if sys.path[0] == '':\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                            OLS Regression Results                            \n",
      "==============================================================================\n",
      "Dep. Variable:                      2   R-squared:                       0.571\n",
      "Model:                            OLS   Adj. R-squared:                  0.560\n",
      "Method:                 Least Squares   F-statistic:                     49.61\n",
      "Date:                Sun, 25 Mar 2018   Prob (F-statistic):           1.79e-32\n",
      "Time:                        06:39:26   Log-Likelihood:                 409.76\n",
      "No. Observations:                 192   AIC:                            -807.5\n",
      "Df Residuals:                     186   BIC:                            -788.0\n",
      "Df Model:                           5                                         \n",
      "Covariance Type:            nonrobust                                         \n",
      "==============================================================================\n",
      "                 coef    std err          t      P>|t|      [0.025      0.975]\n",
      "------------------------------------------------------------------------------\n",
      "const          0.0069      0.003      2.003      0.047       0.000       0.014\n",
      "Market         0.9172      0.063     14.562      0.000       0.793       1.041\n",
      "E(c_t)        -0.0012      0.003     -0.386      0.700      -0.007       0.005\n",
      "Factor1       -0.0136      0.015     -0.931      0.353      -0.042       0.015\n",
      "Factor2       -0.0151      0.010     -1.589      0.114      -0.034       0.004\n",
      "Factor3        0.0075      0.008      0.967      0.335      -0.008       0.023\n",
      "==============================================================================\n",
      "Omnibus:                       18.174   Durbin-Watson:                   1.992\n",
      "Prob(Omnibus):                  0.000   Jarque-Bera (JB):               34.599\n",
      "Skew:                           0.463   Prob(JB):                     3.07e-08\n",
      "Kurtosis:                       4.862   Cond. No.                         32.1\n",
      "==============================================================================\n",
      "\n",
      "Warnings:\n",
      "[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n"
     ]
    }
   ],
   "source": [
    "sec='Commodities'\n",
    "bucket='2'\n",
    "portfolio_rtn=sector_portfolio_sorts[sec][bucket]\n",
    "portoflio_amihud=amihud_values[sec][bucket].diff()\n",
    "market=cleansed[sector_zscores[sec].columns].resample(rule='m',how='last').pct_change().median(axis=1).dropna()\n",
    "market_amihud=amihud[sector_zscores[sec].columns].median(axis=1).diff()\n",
    "factor=pd.DataFrame()\n",
    "factor['Market']=market\n",
    "factor['E(c_t)']=portfolio_amihud\n",
    "factor['Factor1']=pd.rolling_corr(portfolio_amihud,market_amihud,24,min_periods=12)\n",
    "factor['Factor2']=pd.rolling_corr(portfolio_rtn,market_amihud,24,min_periods=12)\n",
    "factor['Factor3']=pd.rolling_corr(portfolio_amihud,market,24,min_periods=12)\n",
    "ind=portfolio_rtn['2001':].index\n",
    "res=sm.OLS(portfolio_rtn.loc[ind],sm.add_constant(factor.loc[ind])).fit()\n",
    "print(res.summary())"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Changing to innovations of liquidity\n",
    "\n",
    "Using AR(2) specification for calculating residuals"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 83,
   "metadata": {},
   "outputs": [],
   "source": [
    "resid_df=calc_resd_df(amihud)\n",
    "\n",
    "sector_zscores={}\n",
    "d_map=sector_map(amihud)\n",
    "for sect in d_map.keys():\n",
    "    sector_zscores[sect]=resid_df[d_map[sect]].dropna(how='all')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 84,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/mrefermat/git/FinancePhD/LiquidityMomentum/tsmom_model.py:224: FutureWarning: how in .resample() is deprecated\n",
      "the new syntax is .resample(...).median()\n",
      "  mkts=quantile_columns(rank_data.resample(rule='a',how='median'),year,number_of_buckets,i)\n",
      "/Users/mrefermat/git/FinancePhD/LiquidityMomentum/tsmom_model.py:225: FutureWarning: how in .resample() is deprecated\n",
      "the new syntax is .resample(...).last()\n",
      "  rtns = price_data.resample(rule='m',how='last')[mkts].pct_change()[str(y+1)].mean(axis=1)\n"
     ]
    }
   ],
   "source": [
    "sector_portfolio_sorts={}\n",
    "amihud_values={}\n",
    "for s in sector_zscores.keys():\n",
    "    sector_portfolio_sorts[s],amihud_values[s]=quantile_portfolios_annual_with_rank(sector_zscores[s],cleansed,5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 85,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/mrefermat/anaconda3/lib/python3.6/site-packages/ipykernel_launcher.py:7: FutureWarning: how in .resample() is deprecated\n",
      "the new syntax is .resample(...).last()\n",
      "  import sys\n",
      "/Users/mrefermat/anaconda3/lib/python3.6/site-packages/ipykernel_launcher.py:12: FutureWarning: pd.rolling_corr is deprecated for Series and will be removed in a future version, replace with \n",
      "\tSeries.rolling(window=24,min_periods=12).corr(other=<Series>)\n",
      "  if sys.path[0] == '':\n",
      "/Users/mrefermat/anaconda3/lib/python3.6/site-packages/ipykernel_launcher.py:13: FutureWarning: pd.rolling_corr is deprecated for Series and will be removed in a future version, replace with \n",
      "\tSeries.rolling(window=24,min_periods=12).corr(other=<Series>)\n",
      "  del sys.path[0]\n",
      "/Users/mrefermat/anaconda3/lib/python3.6/site-packages/ipykernel_launcher.py:14: FutureWarning: pd.rolling_corr is deprecated for Series and will be removed in a future version, replace with \n",
      "\tSeries.rolling(window=24,min_periods=12).corr(other=<Series>)\n",
      "  \n"
     ]
    },
    {
     "ename": "ValueError",
     "evalue": "On entry to DLASCL parameter number 5 had an illegal value",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-85-dbad663462a2>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     15\u001b[0m         \u001b[0mind\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mportfolio_rtn\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'2001'\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mindex\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     16\u001b[0m         \u001b[0;31m#res=sm.OLS(portfolio_rtn.loc[ind],sm.add_constant(factor.loc[ind])).fit(cov_type='HAC',cov_kwds={'maxlags':1})\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 17\u001b[0;31m         \u001b[0mres\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0msm\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mOLS\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mportfolio_rtn\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mloc\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mind\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mfactor\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mloc\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mind\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcov_type\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m'HAC'\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mcov_kwds\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m{\u001b[0m\u001b[0;34m'maxlags'\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m}\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     18\u001b[0m         \u001b[0;31m#sector_res['Portfolio '+bucket]=res.params\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     19\u001b[0m         \u001b[0msector_res\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'Tstat'\u001b[0m\u001b[0;34m+\u001b[0m\u001b[0mbucket\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mres\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtvalues\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/anaconda3/lib/python3.6/site-packages/statsmodels/regression/linear_model.py\u001b[0m in \u001b[0;36m__init__\u001b[0;34m(self, endog, exog, missing, hasconst, **kwargs)\u001b[0m\n\u001b[1;32m    629\u001b[0m                  **kwargs):\n\u001b[1;32m    630\u001b[0m         super(OLS, self).__init__(endog, exog, missing=missing,\n\u001b[0;32m--> 631\u001b[0;31m                                   hasconst=hasconst, **kwargs)\n\u001b[0m\u001b[1;32m    632\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0;34m\"weights\"\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_init_keys\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    633\u001b[0m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_init_keys\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mremove\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"weights\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/anaconda3/lib/python3.6/site-packages/statsmodels/regression/linear_model.py\u001b[0m in \u001b[0;36m__init__\u001b[0;34m(self, endog, exog, weights, missing, hasconst, **kwargs)\u001b[0m\n\u001b[1;32m    524\u001b[0m             \u001b[0mweights\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mweights\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msqueeze\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    525\u001b[0m         super(WLS, self).__init__(endog, exog, missing=missing,\n\u001b[0;32m--> 526\u001b[0;31m                                   weights=weights, hasconst=hasconst, **kwargs)\n\u001b[0m\u001b[1;32m    527\u001b[0m         \u001b[0mnobs\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mexog\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mshape\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    528\u001b[0m         \u001b[0mweights\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mweights\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/anaconda3/lib/python3.6/site-packages/statsmodels/regression/linear_model.py\u001b[0m in \u001b[0;36m__init__\u001b[0;34m(self, endog, exog, **kwargs)\u001b[0m\n\u001b[1;32m     93\u001b[0m     \"\"\"\n\u001b[1;32m     94\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m__init__\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mendog\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mexog\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 95\u001b[0;31m         \u001b[0msuper\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mRegressionModel\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__init__\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mendog\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mexog\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     96\u001b[0m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_data_attr\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mextend\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'pinv_wexog'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'wendog'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'wexog'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'weights'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     97\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/anaconda3/lib/python3.6/site-packages/statsmodels/base/model.py\u001b[0m in \u001b[0;36m__init__\u001b[0;34m(self, endog, exog, **kwargs)\u001b[0m\n\u001b[1;32m    210\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    211\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m__init__\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mendog\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mexog\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mNone\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 212\u001b[0;31m         \u001b[0msuper\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mLikelihoodModel\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__init__\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mendog\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mexog\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    213\u001b[0m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0minitialize\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    214\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/anaconda3/lib/python3.6/site-packages/statsmodels/base/model.py\u001b[0m in \u001b[0;36m__init__\u001b[0;34m(self, endog, exog, **kwargs)\u001b[0m\n\u001b[1;32m     61\u001b[0m         \u001b[0mhasconst\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mkwargs\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpop\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'hasconst'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     62\u001b[0m         self.data = self._handle_data(endog, exog, missing, hasconst,\n\u001b[0;32m---> 63\u001b[0;31m                                       **kwargs)\n\u001b[0m\u001b[1;32m     64\u001b[0m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mk_constant\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mk_constant\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     65\u001b[0m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mexog\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mexog\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/anaconda3/lib/python3.6/site-packages/statsmodels/base/model.py\u001b[0m in \u001b[0;36m_handle_data\u001b[0;34m(self, endog, exog, missing, hasconst, **kwargs)\u001b[0m\n\u001b[1;32m     86\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     87\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m_handle_data\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mendog\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mexog\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmissing\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mhasconst\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 88\u001b[0;31m         \u001b[0mdata\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mhandle_data\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mendog\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mexog\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmissing\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mhasconst\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     89\u001b[0m         \u001b[0;31m# kwargs arrays could have changed, easier to just attach here\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     90\u001b[0m         \u001b[0;32mfor\u001b[0m \u001b[0mkey\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mkwargs\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/anaconda3/lib/python3.6/site-packages/statsmodels/base/data.py\u001b[0m in \u001b[0;36mhandle_data\u001b[0;34m(endog, exog, missing, hasconst, **kwargs)\u001b[0m\n\u001b[1;32m    628\u001b[0m     \u001b[0mklass\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mhandle_data_class_factory\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mendog\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mexog\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    629\u001b[0m     return klass(endog, exog=exog, missing=missing, hasconst=hasconst,\n\u001b[0;32m--> 630\u001b[0;31m                  **kwargs)\n\u001b[0m",
      "\u001b[0;32m~/anaconda3/lib/python3.6/site-packages/statsmodels/base/data.py\u001b[0m in \u001b[0;36m__init__\u001b[0;34m(self, endog, exog, missing, hasconst, **kwargs)\u001b[0m\n\u001b[1;32m     77\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     78\u001b[0m         \u001b[0;31m# this has side-effects, attaches k_constant and const_idx\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 79\u001b[0;31m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_handle_constant\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mhasconst\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     80\u001b[0m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_check_integrity\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     81\u001b[0m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_cache\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mresettable_cache\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/anaconda3/lib/python3.6/site-packages/statsmodels/base/data.py\u001b[0m in \u001b[0;36m_handle_constant\u001b[0;34m(self, hasconst)\u001b[0m\n\u001b[1;32m    170\u001b[0m                 augmented_exog = np.column_stack(\n\u001b[1;32m    171\u001b[0m                             (np.ones(self.exog.shape[0]), self.exog))\n\u001b[0;32m--> 172\u001b[0;31m                 \u001b[0mrank_augm\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnp_matrix_rank\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0maugmented_exog\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    173\u001b[0m                 \u001b[0mrank_orig\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnp_matrix_rank\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mexog\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    174\u001b[0m                 \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mk_constant\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mrank_orig\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0mrank_augm\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/anaconda3/lib/python3.6/site-packages/numpy/linalg/linalg.py\u001b[0m in \u001b[0;36mmatrix_rank\u001b[0;34m(M, tol)\u001b[0m\n\u001b[1;32m   1569\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mM\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mndim\u001b[0m \u001b[0;34m<\u001b[0m \u001b[0;36m2\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1570\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0mint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;32mnot\u001b[0m \u001b[0mall\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mM\u001b[0m\u001b[0;34m==\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1571\u001b[0;31m     \u001b[0mS\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0msvd\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mM\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcompute_uv\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mFalse\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1572\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mtol\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1573\u001b[0m         \u001b[0mtol\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mS\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmax\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0maxis\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m-\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mkeepdims\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m*\u001b[0m \u001b[0mmax\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mM\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mshape\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m-\u001b[0m\u001b[0;36m2\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m*\u001b[0m \u001b[0mfinfo\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mS\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0meps\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/anaconda3/lib/python3.6/site-packages/numpy/linalg/linalg.py\u001b[0m in \u001b[0;36msvd\u001b[0;34m(a, full_matrices, compute_uv)\u001b[0m\n\u001b[1;32m   1399\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1400\u001b[0m         \u001b[0msignature\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m'D->d'\u001b[0m \u001b[0;32mif\u001b[0m \u001b[0misComplexType\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mt\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32melse\u001b[0m \u001b[0;34m'd->d'\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1401\u001b[0;31m         \u001b[0ms\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mgufunc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0ma\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0msignature\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0msignature\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mextobj\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mextobj\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1402\u001b[0m         \u001b[0ms\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0ms\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mastype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0m_realType\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mresult_t\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mFalse\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1403\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0ms\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;31mValueError\u001b[0m: On entry to DLASCL parameter number 5 had an illegal value"
     ]
    }
   ],
   "source": [
    "final_res={}\n",
    "for sec in ['Equities', 'Commodities', 'Fixed Income']:\n",
    "    sector_res=pd.DataFrame()\n",
    "    for bucket in ['0','1','2','3','4']:\n",
    "        portfolio_rtn=sector_portfolio_sorts[sec][bucket]\n",
    "        portoflio_amihud=amihud_values[sec][bucket]\n",
    "        market=cleansed[sector_zscores[sec].columns].resample(rule='m',how='last').pct_change().median(axis=1).dropna()\n",
    "        market_amihud=amihud[sector_zscores[sec].columns].median(axis=1)\n",
    "        factor=pd.DataFrame()\n",
    "        factor['Market']=market\n",
    "        factor['E(c_t)']=portfolio_amihud\n",
    "        factor['Factor1']=pd.rolling_corr(portfolio_amihud,market_amihud,24,min_periods=12)\n",
    "        factor['Factor2']=pd.rolling_corr(portfolio_rtn,market_amihud,24,min_periods=12)\n",
    "        factor['Factor3']=pd.rolling_corr(portfolio_amihud,market,24,min_periods=12)\n",
    "        ind=portfolio_rtn['2001':].index\n",
    "        #res=sm.OLS(portfolio_rtn.loc[ind],sm.add_constant(factor.loc[ind])).fit(cov_type='HAC',cov_kwds={'maxlags':1})\n",
    "        res=sm.OLS(portfolio_rtn.loc[ind],factor.loc[ind]).fit(cov_type='HAC',cov_kwds={'maxlags':1})\n",
    "        #sector_res['Portfolio '+bucket]=res.params\n",
    "        sector_res['Tstat'+bucket]=res.tvalues\n",
    "    final_res[sec]=sector_res"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "final_res['Equities'].round(2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 86,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x1c27f02470>"
      ]
     },
     "execution_count": 86,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAABWcAAAQSCAYAAADDtkjaAAAABHNCSVQICAgIfAhkiAAAAAlwSFlz\nAAALEgAACxIB0t1+/AAAADl0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uIDIuMS4wLCBo\ndHRwOi8vbWF0cGxvdGxpYi5vcmcvpW3flQAAIABJREFUeJzs3XuAzXX+x/HXuY6ZMSIGM+xSIUm5\nFjE0UYhuy2JRpCnkUmJbWlu/WtWWUna3UpiklnY3pbTE0iJF7pPL6mLlVimXGWaMmTnfc87vj3G+\n5jR3znfOMfN8/BPne5zvZ6bvH+f7Ou/z+tj8fr9fAAAAAAAAAIAKZQ/3AgAAAAAAAACgKiKcBQAA\nAAAAAIAwIJwFAAAAAAAAgDAgnAUAAAAAAACAMCCcBQAAAAAAAIAwcIZ7AUU5ciQz3Euo8mrVilF6\nena4lwGcF65jVBZcy6gMuI5RWXAtozLgOkZlwbWMC0V8fFyxx5icRZGcTke4lwCcN65jVBZcy6gM\nuI5RWXAtozLgOkZlwbWMyoBwFgAAAAAAAADCgHAWAAAAAAAAAMKAcBYAAAAAAAAAwoBwFgAAAAAA\nAADCgHAWAAAAAAAAAMKAcBYAAAAAAAAAwoBwFgAAAAAAAADCgHAWAAAAAAAAAMKAcBYAAAAAAAAA\nwoBwFgAAAAAAAADCgHAWAAAAAAAAAMKAcBYAAAAAAAAAwoBwFgAAAAAAAADCgHAWAAAAAAAAAMKA\ncBYAAAAAAAAAwoBwFgAAAAAAAADCoELC2WeffVaXX365NmzYUBGnAwAAAAAAAICIZ3k4u337ds2b\nN8/q0wAAAAAAAAAIgdTU15SU1F5JSe31xhtzSnzujBnPmc/94YfvQ7aGrVs3Kympvf785+khe01J\n8nq9evfdf+j06dMhfd1zZWk4m5eXpylTpsjr9Vp5GgAAAAAAAAAW+OSTVcUe8/v9WrOm+OOR6Ikn\n/qAXX3xOhmGEeymSLA5nX331VX377bfq1KmTlacBAAAAAAAAEGK1a9fW119/VexE7M6d23XkyE+K\njo6p4JWdu+PHj4V7CUEsC2e//PJLzZo1SyNHjlSTJk2sOg0AAAAAAAAAC3Tpkiyp+OnZ1as/VvXq\n1dWqVesKXFXlYkk46/V69fvf/16NGjXSyJEjrTgFAAAAAAAAAAu1bXuN4uJqFFtdsGbNKnXu3FUu\nl6vQsY8++pfGjh2hXr1uUHJyR91+e0898cQf9N13h4Kel5TUXk899bjefPN19eqVrF69kvWPf8wv\n8nwej0cTJoxVUlJ7zZnzatCxLVs2afz40erZ83rdeGOSRo4crlWrVhY6V1raVknSzTffoLFjR5T5\nd2EVS8LZ1NRU7d69W08++aTcbrcVpwAAAAAAAABgIafTqc6du2jnzu2F6gD++9+dOnz4B91ww42F\n/t1LL83QU089rqysLPXufYv69Rug2rXjtWLFMo0bN1K5uTlBz9+wYb3mz5+nXr1u0bXXXqcrr7yq\n0Gv6fD798Y+PauPGzzV48F26995R5rEPP3xf48eP1v/+t0fduvXQ7bf3VXr6cT366GS9+ebr5vOG\nD79P9esnSJKGDBmm3r1vPa/fTyg4Q/2C3377rV566SUNHjxYbdq0OafXqFUrRk6nI8QrQ3nFx8eF\newnAeeM6RmXBtYzKgOsYlQXXMioDrmNUFhV5Lb/+4S599sV3FXa+c9G5VQPdc+uV5/06sbFRkqSL\nLorWbbf10bJlS5SWtkEDBw40n7Nhw1pVr15dffrcpBUrlkiSLr44Vj5ftv75zwW65pprNG/ePDkc\nZzO+ESNGaM2aNdq37yslJSWZjx8/fkwzZ85Ut27dCrz+BklSdLRL8fFxevTRR7Vq1UoNHTpUU6ZM\nMZ93+PBhvfjiNF166aWaP3++atWqJUnKycnR3XffrTlzXtWtt96sZs2aafLk32rXri90+PAPGj9+\nrGrUqHHev6vzFdJw1u/3a8qUKapdu7YmTJhwzq+Tnp4dwlXhXMTHx+nIkcxwLwM4L1zHqCy4llEZ\ncB2jsuBaRmXAdYzKoqKv5dPZefJ6/RV2vnNxOjsvJL+TU6dyJUknTpxWhw7XKTo6Rv/610fq1q23\n+ZyPPlqmzp276MSJXOXlGZKk48dPKSYmRn/4wx91ySWX6Pjx4IyvRYurz4Sz3+nyy8+uMyoqSi1a\ntA1ae0ZG/r89fdqjJ554Sv/85z91xx39NGLEA0HPW7DgHeXl5enuu++TYTiDjg0deq8eemiMFiz4\np8aMeVCSzLUePZql3Fzbef+uyqKkDxFCGs7Onz9fW7Zs0axZsxQbGxvKlwYAAAAAAADCZkC3JhrQ\nrepteh8VFaVOnTprzZpVysrKUvXq1fXVV1/q+++/0wMPFB7OvOiimurRo5d8Pp/27t2jffv26fvv\n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\nTLZttWrVkiSdP39eGzdufOBtBbZzSEtLe/biUKQYmeWkpCQlJCQoKysr31jbsTw9PZ+9OBQZRubY\nJjc3V7t27VL58uWfaT05QHKOLHt7e6t3796KjIxUp06d5OHhoRMnTkiS6tSpU+Aa4focnWPAKEZm\nmTkfHMXIHDPfg7OiOesCsrOzFRkZqT///FPNmzdXbGzsA68kadKkiSwWiw4ePJjv9UePHlWdOnXs\nD+No0qSJJOnAgQP59rNv3z6VKVNG/v7+kqTly5dr/Pjx+uOPP/KNPXv2rCSpRo0aBSsSRYLRWY6O\njtbQoUO1a9eufGMPHTok6d4DaoBHMTrHNpcuXVJGRoZCQkLk5ubmqPJQhBid5S1btqhly5b69ddf\n843dsmWLPDw81Lx58wLXCddWGDkGjGB0lpnzwRGMzjHzPTgrmrMuYN68eTpy5IiCg4O1ePHih35I\nde/eXW5uboqOjs5zO+F3332nW7duqV+/fvZt7dq100svvaQlS5bIZDLZt69fv16XL19Wnz597Gu0\ndO7cWZK0YMGCPN9sJScnKyYmRp6enurWrZtDa4ZrMjrLtqfMLly4UJmZmfaxly5d0qJFi+Tt7U2W\n8VhG59jm1KlTknhKOJ6d0VkOCAiQyWTS2rVr8zz4a+HChTp79qz69esnb29vR5cNF1MYOQaMYHSW\nmfPBEYzOMfM9OCt3o08ABfPPP/9o5cqVku4tzL548eIHjhs5cqRq166t4cOHa/HixerZs6fatGmj\nCxcuaPv27QoJCVHfvn3t4318fDRhwgRNmzZNPXv2VOfOnXXt2jX9/PPPqlmzpiIjI+1jW7Vqpd69\neysuLk5du3ZV27ZtlZGRoS1btujOnTuaPXu2KlWqVLhvBF54zpDltm3bqlu3bvrpp5/UrVs3tW3b\nVjdv3tTWrVt19+5dffPNN/Z1DoEHcYYc2yQnJ0viKhY8G2fIcrVq1RQREaHvv/9e/fv3V9OmTXXu\n3Dnt3LlTgYGBGjt2bOG+CXjhFVaOgefNGbLMnA8F5Qw5Zr4HZ1XMev+lCHjhbNu2TWPGjHnsuAMH\nDqhs2bKyWq1atWqVVq1apaSkJFWsWFHt27fXu++++8AFtTdv3qwlS5bowoUL8vb2VlhYmD744AO9\n/PLLecbZ9rtmzRolJibKy8tLISEhioyMtN/CCDyKs2TZYrFoxYoVWrdunRITE1WyZEmFhIRozJgx\n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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x1c2724bdd8>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "factor.dropna().plot()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 354,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/mrefermat/anaconda3/lib/python3.6/site-packages/ipykernel_launcher.py:10: FutureWarning: how in .resample() is deprecated\n",
      "the new syntax is .resample(...).median()\n",
      "  # Remove the CWD from sys.path while we load stuff.\n",
      "/Users/mrefermat/anaconda3/lib/python3.6/site-packages/ipykernel_launcher.py:11: FutureWarning: how in .resample() is deprecated\n",
      "the new syntax is .resample(...).last()\n",
      "  # This is added back by InteractiveShellApp.init_path()\n"
     ]
    }
   ],
   "source": [
    "number_of_buckets=5\n",
    "deciles={}\n",
    "med_value={}\n",
    "for i in range(0,number_of_buckets,1):\n",
    "    deciles[str(i)]=pd.Series()\n",
    "    med_value[str(i)]=pd.Series()\n",
    "for y in range(FHT.index[0].year,FHT.index[-1].year,1):\n",
    "    year=str(y) + '-12-31'\n",
    "    for i in range(0,number_of_buckets,1):\n",
    "        mkts=quantile_columns(FHT.resample(rule='a',how='median'),year,number_of_buckets,i)\n",
    "        rtns = cleansed.resample(rule='m',how='last')[mkts].pct_change()[str(y+1)].mean(axis=1)\n",
    "        med=FHT[mkts][str(y+1)].median(axis=1)\n",
    "        deciles[str(i)]=deciles[str(i)].append(rtns)\n",
    "        med_value[str(i)]=med_value[str(i)].append(med)\n",
    "    break\n",
    "temp=pd.DataFrame(med_value)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 355,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'0': 1992-01-31    0.002336\n",
       " 1992-02-29    0.001809\n",
       " 1992-03-31    0.003534\n",
       " 1992-04-30    0.002384\n",
       " 1992-05-31    0.002320\n",
       " 1992-06-30    0.002061\n",
       " 1992-07-31    0.001862\n",
       " 1992-08-31    0.001897\n",
       " 1992-09-30    0.004476\n",
       " 1992-10-31    0.003529\n",
       " 1992-11-30    0.002849\n",
       " 1992-12-31    0.002795\n",
       " Freq: M, dtype: float64, '1': 1992-01-31    0.008390\n",
       " 1992-02-29    0.008601\n",
       " 1992-03-31    0.009319\n",
       " 1992-04-30    0.007670\n",
       " 1992-05-31    0.007710\n",
       " 1992-06-30    0.008115\n",
       " 1992-07-31    0.010698\n",
       " 1992-08-31    0.013120\n",
       " 1992-09-30    0.014020\n",
       " 1992-10-31    0.009433\n",
       " 1992-11-30    0.007492\n",
       " 1992-12-31    0.007268\n",
       " dtype: float64, '2': 1992-01-31    0.012873\n",
       " 1992-02-29    0.012594\n",
       " 1992-03-31    0.011204\n",
       " 1992-04-30    0.009342\n",
       " 1992-05-31    0.013122\n",
       " 1992-06-30    0.014767\n",
       " 1992-07-31    0.016641\n",
       " 1992-08-31    0.017762\n",
       " 1992-09-30    0.018020\n",
       " 1992-10-31    0.011976\n",
       " 1992-11-30    0.010821\n",
       " 1992-12-31    0.009852\n",
       " dtype: float64, '3': 1992-01-31    0.018235\n",
       " 1992-02-29    0.016755\n",
       " 1992-03-31    0.013841\n",
       " 1992-04-30    0.015307\n",
       " 1992-05-31    0.019795\n",
       " 1992-06-30    0.019258\n",
       " 1992-07-31    0.018921\n",
       " 1992-08-31    0.014136\n",
       " 1992-09-30    0.014570\n",
       " 1992-10-31    0.012991\n",
       " 1992-11-30    0.015498\n",
       " 1992-12-31    0.013223\n",
       " dtype: float64, '4': 1992-01-31    0.024072\n",
       " 1992-02-29    0.023615\n",
       " 1992-03-31    0.019938\n",
       " 1992-04-30    0.019508\n",
       " 1992-05-31    0.025866\n",
       " 1992-06-30    0.022616\n",
       " 1992-07-31    0.024273\n",
       " 1992-08-31    0.026579\n",
       " 1992-09-30    0.024646\n",
       " 1992-10-31    0.017033\n",
       " 1992-11-30    0.022589\n",
       " 1992-12-31    0.022979\n",
       " dtype: float64}"
      ]
     },
     "execution_count": 355,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "med_value"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 345,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0    204\n",
       "1    204\n",
       "2    204\n",
       "3    204\n",
       "4    204\n",
       "dtype: int64"
      ]
     },
     "execution_count": 345,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sector_portfolio_sorts['Equities'].count()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 343,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>CME-3 MTH EURODOLLAR COMP.</th>\n",
       "      <th>SFE-AUST 90 DAY BANK BILLS</th>\n",
       "      <th>EUREX-EURO SCHATZ</th>\n",
       "      <th>SFE-30 DAY INTERBANK CASH</th>\n",
       "      <th>TIFFE-3 MTH EUROYEN TIBOR</th>\n",
       "      <th>EUREX-EURO BOBL</th>\n",
       "      <th>TSE-10 YEAR T-BOND</th>\n",
       "      <th>CBT-10 YRS US T-NOTE COMP.</th>\n",
       "      <th>ME-BANK ACCEPT. 90 DAY</th>\n",
       "      <th>CBT-5 YEAR US T-NOTE COMP.</th>\n",
       "      <th>...</th>\n",
       "      <th>NORDPOOL-ENO</th>\n",
       "      <th>SAFEX-WHITE MAIZE</th>\n",
       "      <th>TOCOM-RUBBER</th>\n",
       "      <th>BMF-SOYBEAN</th>\n",
       "      <th>SHFE-GOLD</th>\n",
       "      <th>TGE-ROBUSTA COFFEE</th>\n",
       "      <th>TOCOM-SILVER</th>\n",
       "      <th>TOCOM-PALLADIUM</th>\n",
       "      <th>Rotterdam Coal</th>\n",
       "      <th>Milling Wheat</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Date</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2017-01-23</th>\n",
       "      <td>98.9500</td>\n",
       "      <td>98.20</td>\n",
       "      <td>112.200</td>\n",
       "      <td>98.500</td>\n",
       "      <td>NaN</td>\n",
       "      <td>133.30</td>\n",
       "      <td>150.25</td>\n",
       "      <td>124.8438</td>\n",
       "      <td>NaN</td>\n",
       "      <td>118.0469</td>\n",
       "      <td>...</td>\n",
       "      <td>29.00</td>\n",
       "      <td>3395.0</td>\n",
       "      <td>304.6</td>\n",
       "      <td>NaN</td>\n",
       "      <td>271.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>62.0</td>\n",
       "      <td>2788.0</td>\n",
       "      <td>89.30</td>\n",
       "      <td>239.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2017-01-24</th>\n",
       "      <td>98.9475</td>\n",
       "      <td>98.20</td>\n",
       "      <td>112.175</td>\n",
       "      <td>98.500</td>\n",
       "      <td>NaN</td>\n",
       "      <td>133.11</td>\n",
       "      <td>150.39</td>\n",
       "      <td>124.2500</td>\n",
       "      <td>NaN</td>\n",
       "      <td>117.6953</td>\n",
       "      <td>...</td>\n",
       "      <td>29.55</td>\n",
       "      <td>3232.0</td>\n",
       "      <td>306.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>269.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>62.0</td>\n",
       "      <td>2825.0</td>\n",
       "      <td>89.20</td>\n",
       "      <td>238.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2017-01-25</th>\n",
       "      <td>98.9450</td>\n",
       "      <td>98.22</td>\n",
       "      <td>112.130</td>\n",
       "      <td>98.505</td>\n",
       "      <td>NaN</td>\n",
       "      <td>132.78</td>\n",
       "      <td>150.08</td>\n",
       "      <td>123.8906</td>\n",
       "      <td>NaN</td>\n",
       "      <td>117.5313</td>\n",
       "      <td>...</td>\n",
       "      <td>28.93</td>\n",
       "      <td>3146.0</td>\n",
       "      <td>308.5</td>\n",
       "      <td>NaN</td>\n",
       "      <td>266.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>62.0</td>\n",
       "      <td>2889.0</td>\n",
       "      <td>88.85</td>\n",
       "      <td>236.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2017-01-26</th>\n",
       "      <td>98.9450</td>\n",
       "      <td>98.22</td>\n",
       "      <td>112.135</td>\n",
       "      <td>98.505</td>\n",
       "      <td>NaN</td>\n",
       "      <td>132.76</td>\n",
       "      <td>149.84</td>\n",
       "      <td>123.9688</td>\n",
       "      <td>NaN</td>\n",
       "      <td>117.6016</td>\n",
       "      <td>...</td>\n",
       "      <td>29.00</td>\n",
       "      <td>3046.0</td>\n",
       "      <td>328.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>265.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>62.0</td>\n",
       "      <td>2697.0</td>\n",
       "      <td>88.50</td>\n",
       "      <td>237.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2017-01-27</th>\n",
       "      <td>98.9500</td>\n",
       "      <td>98.22</td>\n",
       "      <td>112.145</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>132.75</td>\n",
       "      <td>150.00</td>\n",
       "      <td>124.1406</td>\n",
       "      <td>NaN</td>\n",
       "      <td>117.7031</td>\n",
       "      <td>...</td>\n",
       "      <td>28.60</td>\n",
       "      <td>NaN</td>\n",
       "      <td>347.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>62.0</td>\n",
       "      <td>2726.0</td>\n",
       "      <td>80.85</td>\n",
       "      <td>234.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 123 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "            CME-3 MTH EURODOLLAR COMP.  SFE-AUST 90 DAY BANK BILLS  \\\n",
       "Date                                                                 \n",
       "2017-01-23                     98.9500                       98.20   \n",
       "2017-01-24                     98.9475                       98.20   \n",
       "2017-01-25                     98.9450                       98.22   \n",
       "2017-01-26                     98.9450                       98.22   \n",
       "2017-01-27                     98.9500                       98.22   \n",
       "\n",
       "            EUREX-EURO SCHATZ  SFE-30 DAY INTERBANK CASH  \\\n",
       "Date                                                       \n",
       "2017-01-23            112.200                     98.500   \n",
       "2017-01-24            112.175                     98.500   \n",
       "2017-01-25            112.130                     98.505   \n",
       "2017-01-26            112.135                     98.505   \n",
       "2017-01-27            112.145                        NaN   \n",
       "\n",
       "            TIFFE-3 MTH EUROYEN TIBOR  EUREX-EURO BOBL  TSE-10 YEAR T-BOND  \\\n",
       "Date                                                                         \n",
       "2017-01-23                        NaN           133.30              150.25   \n",
       "2017-01-24                        NaN           133.11              150.39   \n",
       "2017-01-25                        NaN           132.78              150.08   \n",
       "2017-01-26                        NaN           132.76              149.84   \n",
       "2017-01-27                        NaN           132.75              150.00   \n",
       "\n",
       "            CBT-10 YRS US T-NOTE COMP.  ME-BANK ACCEPT. 90 DAY  \\\n",
       "Date                                                             \n",
       "2017-01-23                    124.8438                     NaN   \n",
       "2017-01-24                    124.2500                     NaN   \n",
       "2017-01-25                    123.8906                     NaN   \n",
       "2017-01-26                    123.9688                     NaN   \n",
       "2017-01-27                    124.1406                     NaN   \n",
       "\n",
       "            CBT-5 YEAR US T-NOTE COMP.      ...        NORDPOOL-ENO  \\\n",
       "Date                                        ...                       \n",
       "2017-01-23                    118.0469      ...               29.00   \n",
       "2017-01-24                    117.6953      ...               29.55   \n",
       "2017-01-25                    117.5313      ...               28.93   \n",
       "2017-01-26                    117.6016      ...               29.00   \n",
       "2017-01-27                    117.7031      ...               28.60   \n",
       "\n",
       "            SAFEX-WHITE MAIZE  TOCOM-RUBBER  BMF-SOYBEAN  SHFE-GOLD  \\\n",
       "Date                                                                  \n",
       "2017-01-23             3395.0         304.6          NaN      271.0   \n",
       "2017-01-24             3232.0         306.0          NaN      269.0   \n",
       "2017-01-25             3146.0         308.5          NaN      266.0   \n",
       "2017-01-26             3046.0         328.0          NaN      265.0   \n",
       "2017-01-27                NaN         347.0          NaN        NaN   \n",
       "\n",
       "            TGE-ROBUSTA COFFEE  TOCOM-SILVER  TOCOM-PALLADIUM  Rotterdam Coal  \\\n",
       "Date                                                                            \n",
       "2017-01-23                 NaN          62.0           2788.0           89.30   \n",
       "2017-01-24                 NaN          62.0           2825.0           89.20   \n",
       "2017-01-25                 NaN          62.0           2889.0           88.85   \n",
       "2017-01-26                 NaN          62.0           2697.0           88.50   \n",
       "2017-01-27                 NaN          62.0           2726.0           80.85   \n",
       "\n",
       "            Milling Wheat  \n",
       "Date                       \n",
       "2017-01-23          239.0  \n",
       "2017-01-24          238.0  \n",
       "2017-01-25          236.0  \n",
       "2017-01-26          237.0  \n",
       "2017-01-27          234.0  \n",
       "\n",
       "[5 rows x 123 columns]"
      ]
     },
     "execution_count": 343,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cleansed.tail()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# FHT method"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 258,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/mrefermat/git/FinancePhD/LiquidityMomentum/tsmom_model3.py:53: FutureWarning: how in .resample() is deprecated\n",
      "the new syntax is .resample(...).count()\n",
      "  nonzero=x[x==0].resample(rule='m',how='count')\n",
      "/Users/mrefermat/git/FinancePhD/LiquidityMomentum/tsmom_model3.py:54: FutureWarning: how in .resample() is deprecated\n",
      "the new syntax is .resample(...).count()\n",
      "  Z=(nonzero/x.resample(rule='m',how='count')).dropna()\n",
      "/Users/mrefermat/git/FinancePhD/LiquidityMomentum/tsmom_model3.py:55: FutureWarning: pd.rolling_std is deprecated for Series and will be removed in a future version, replace with \n",
      "\tSeries.rolling(window=12,center=False).std()\n",
      "  data[c]=pd.Series(norm.cdf((1+Z)/2.),index=Z.index)*2*pd.rolling_std(x,12).resample(rule='m',how='last')\n",
      "/Users/mrefermat/git/FinancePhD/LiquidityMomentum/tsmom_model3.py:55: FutureWarning: how in .resample() is deprecated\n",
      "the new syntax is .resample(...).last()\n",
      "  data[c]=pd.Series(norm.cdf((1+Z)/2.),index=Z.index)*2*pd.rolling_std(x,12).resample(rule='m',how='last')\n"
     ]
    }
   ],
   "source": [
    "FHT=calculate_FHT(cleansed)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 261,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/mrefermat/git/FinancePhD/LiquidityMomentum/tsmom_model3.py:71: FutureWarning: pd.rolling_mean is deprecated for DataFrame and will be removed in a future version, replace with \n",
      "\tDataFrame.rolling(window=100000000,min_periods=3,center=False).mean()\n",
      "  return (df-pd.rolling_mean(df,100000000,min_periods=min_per))/pd.rolling_std(df,100000000,min_periods=min_per)\n",
      "/Users/mrefermat/git/FinancePhD/LiquidityMomentum/tsmom_model3.py:71: FutureWarning: pd.rolling_std is deprecated for DataFrame and will be removed in a future version, replace with \n",
      "\tDataFrame.rolling(window=100000000,min_periods=3,center=False).std()\n",
      "  return (df-pd.rolling_mean(df,100000000,min_periods=min_per))/pd.rolling_std(df,100000000,min_periods=min_per)\n",
      "/Users/mrefermat/anaconda3/lib/python3.6/site-packages/ipykernel_launcher.py:10: FutureWarning: how in .resample() is deprecated\n",
      "the new syntax is .resample(...).median()\n",
      "  # Remove the CWD from sys.path while we load stuff.\n",
      "/Users/mrefermat/anaconda3/lib/python3.6/site-packages/ipykernel_launcher.py:11: FutureWarning: how in .resample() is deprecated\n",
      "the new syntax is .resample(...).last()\n",
      "  # This is added back by InteractiveShellApp.init_path()\n"
     ]
    }
   ],
   "source": [
    "data=calc_zscore_expanding_window(FHT.dropna(how='all'),3).dropna(how='all')\n",
    "sector_zscores_FHT={}\n",
    "d_map=sector_map(amihud)\n",
    "for sect in d_map.keys():\n",
    "    sector_zscores_FHT[sect]=data[d_map[sect]].dropna(how='all')\n",
    "\n",
    "sector_portfolio_sorts_FHT={}\n",
    "FHT_values={}\n",
    "for s in sector_zscores.keys():\n",
    "    sector_portfolio_sorts_FHT[s],FHT_values[s]=quantile_portfolios_annual_with_rank(sector_zscores_FHT[s],cleansed,5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 264,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/mrefermat/anaconda3/lib/python3.6/site-packages/ipykernel_launcher.py:5: FutureWarning: how in .resample() is deprecated\n",
      "the new syntax is .resample(...).last()\n",
      "  \"\"\"\n",
      "/Users/mrefermat/anaconda3/lib/python3.6/site-packages/ipykernel_launcher.py:9: FutureWarning: pd.expanding_corr is deprecated for Series and will be removed in a future version, replace with \n",
      "\tSeries.expanding(min_periods=1).corr(other=<Series>)\n",
      "  if __name__ == '__main__':\n"
     ]
    },
    {
     "ename": "ValueError",
     "evalue": "cannot reindex from a duplicate axis",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-264-250978b515e8>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      7\u001b[0m \u001b[0mfactor\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mpd\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mDataFrame\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      8\u001b[0m \u001b[0mfactor\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'Market'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mmarket\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 9\u001b[0;31m \u001b[0mfactor\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'Factor1'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mpd\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mexpanding_corr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mportfolio_FHT\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mmarket_FHT\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     10\u001b[0m \u001b[0mfactor\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'Factor2'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mpd\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mexpanding_corr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mportfolio_rtn\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mmarket_FHT\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     11\u001b[0m \u001b[0mfactor\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'Factor3'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mpd\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mexpanding_corr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mportfolio_FHT\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mmarket\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/anaconda3/lib/python3.6/site-packages/pandas/core/frame.py\u001b[0m in \u001b[0;36m__setitem__\u001b[0;34m(self, key, value)\u001b[0m\n\u001b[1;32m   2329\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2330\u001b[0m             \u001b[0;31m# set column\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 2331\u001b[0;31m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_set_item\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mvalue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   2332\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2333\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m_setitem_slice\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mkey\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mvalue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/anaconda3/lib/python3.6/site-packages/pandas/core/frame.py\u001b[0m in \u001b[0;36m_set_item\u001b[0;34m(self, key, value)\u001b[0m\n\u001b[1;32m   2395\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2396\u001b[0m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_ensure_valid_index\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mvalue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 2397\u001b[0;31m         \u001b[0mvalue\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_sanitize_column\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mvalue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   2398\u001b[0m         \u001b[0mNDFrame\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_set_item\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mkey\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mvalue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2399\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/anaconda3/lib/python3.6/site-packages/pandas/core/frame.py\u001b[0m in \u001b[0;36m_sanitize_column\u001b[0;34m(self, key, value, broadcast)\u001b[0m\n\u001b[1;32m   2545\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2546\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0misinstance\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mvalue\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mSeries\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 2547\u001b[0;31m             \u001b[0mvalue\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mreindexer\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mvalue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   2548\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2549\u001b[0m         \u001b[0;32melif\u001b[0m \u001b[0misinstance\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mvalue\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mDataFrame\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/anaconda3/lib/python3.6/site-packages/pandas/core/frame.py\u001b[0m in \u001b[0;36mreindexer\u001b[0;34m(value)\u001b[0m\n\u001b[1;32m   2537\u001b[0m                     \u001b[0;31m# duplicate axis\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2538\u001b[0m                     \u001b[0;32mif\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0mvalue\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mindex\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mis_unique\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 2539\u001b[0;31m                         \u001b[0;32mraise\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   2540\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2541\u001b[0m                     \u001b[0;31m# other\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/anaconda3/lib/python3.6/site-packages/pandas/core/frame.py\u001b[0m in \u001b[0;36mreindexer\u001b[0;34m(value)\u001b[0m\n\u001b[1;32m   2532\u001b[0m                 \u001b[0;31m# GH 4107\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2533\u001b[0m                 \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 2534\u001b[0;31m                     \u001b[0mvalue\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mvalue\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mreindex\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mindex\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_values\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   2535\u001b[0m                 \u001b[0;32mexcept\u001b[0m \u001b[0mException\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2536\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/anaconda3/lib/python3.6/site-packages/pandas/core/series.py\u001b[0m in \u001b[0;36mreindex\u001b[0;34m(self, index, **kwargs)\u001b[0m\n\u001b[1;32m   2424\u001b[0m     \u001b[0;34m@\u001b[0m\u001b[0mAppender\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mgeneric\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_shared_docs\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'reindex'\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m%\u001b[0m \u001b[0m_shared_doc_kwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2425\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mreindex\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mindex\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mNone\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 2426\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0msuper\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mSeries\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mreindex\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mindex\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mindex\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   2427\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2428\u001b[0m     \u001b[0;34m@\u001b[0m\u001b[0mAppender\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mgeneric\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_shared_docs\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'fillna'\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m%\u001b[0m \u001b[0m_shared_doc_kwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/anaconda3/lib/python3.6/site-packages/pandas/core/generic.py\u001b[0m in \u001b[0;36mreindex\u001b[0;34m(self, *args, **kwargs)\u001b[0m\n\u001b[1;32m   2513\u001b[0m         \u001b[0;31m# perform the reindex on the axes\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2514\u001b[0m         return self._reindex_axes(axes, level, limit, tolerance, method,\n\u001b[0;32m-> 2515\u001b[0;31m                                   fill_value, copy).__finalize__(self)\n\u001b[0m\u001b[1;32m   2516\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2517\u001b[0m     def _reindex_axes(self, axes, level, limit, tolerance, method, fill_value,\n",
      "\u001b[0;32m~/anaconda3/lib/python3.6/site-packages/pandas/core/generic.py\u001b[0m in \u001b[0;36m_reindex_axes\u001b[0;34m(self, axes, level, limit, tolerance, method, fill_value, copy)\u001b[0m\n\u001b[1;32m   2531\u001b[0m             obj = obj._reindex_with_indexers({axis: [new_index, indexer]},\n\u001b[1;32m   2532\u001b[0m                                              \u001b[0mfill_value\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mfill_value\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 2533\u001b[0;31m                                              copy=copy, allow_dups=False)\n\u001b[0m\u001b[1;32m   2534\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2535\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0mobj\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/anaconda3/lib/python3.6/site-packages/pandas/core/generic.py\u001b[0m in \u001b[0;36m_reindex_with_indexers\u001b[0;34m(self, reindexers, fill_value, copy, allow_dups)\u001b[0m\n\u001b[1;32m   2625\u001b[0m                                                 \u001b[0mfill_value\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mfill_value\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2626\u001b[0m                                                 \u001b[0mallow_dups\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mallow_dups\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 2627\u001b[0;31m                                                 copy=copy)\n\u001b[0m\u001b[1;32m   2628\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2629\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mcopy\u001b[0m \u001b[0;32mand\u001b[0m \u001b[0mnew_data\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_data\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/anaconda3/lib/python3.6/site-packages/pandas/core/internals.py\u001b[0m in \u001b[0;36mreindex_indexer\u001b[0;34m(self, new_axis, indexer, axis, fill_value, allow_dups, copy)\u001b[0m\n\u001b[1;32m   3884\u001b[0m         \u001b[0;31m# some axes don't allow reindexing with dups\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3885\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0mallow_dups\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 3886\u001b[0;31m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0maxes\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0maxis\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_can_reindex\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mindexer\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   3887\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3888\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0maxis\u001b[0m \u001b[0;34m>=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mndim\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/anaconda3/lib/python3.6/site-packages/pandas/core/indexes/base.py\u001b[0m in \u001b[0;36m_can_reindex\u001b[0;34m(self, indexer)\u001b[0m\n\u001b[1;32m   2834\u001b[0m         \u001b[0;31m# trying to reindex on an axis with duplicates\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2835\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mis_unique\u001b[0m \u001b[0;32mand\u001b[0m \u001b[0mlen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mindexer\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 2836\u001b[0;31m             \u001b[0;32mraise\u001b[0m \u001b[0mValueError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"cannot reindex from a duplicate axis\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   2837\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2838\u001b[0m     def reindex(self, target, method=None, level=None, limit=None,\n",
      "\u001b[0;31mValueError\u001b[0m: cannot reindex from a duplicate axis"
     ]
    }
   ],
   "source": [
    "sec='Equities'\n",
    "bucket='4'\n",
    "portfolio_rtn=sector_portfolio_sorts_FHT[sec][bucket]\n",
    "# There is a problem with this line I assume its coming from the sorts as there is duplicate\n",
    "# entries for each date\n",
    "portfolio_FHT=FHT_values[sec][bucket]\n",
    "market=cleansed[sector_zscores_FHT[sec].columns].resample(rule='m',how='last').pct_change().median(axis=1).dropna()\n",
    "market_FHT=FHT[sector_zscores_FHT[sec].columns].median(axis=1)\n",
    "factor=pd.DataFrame()\n",
    "factor['Market']=market\n",
    "factor['Factor1']=pd.expanding_corr(portfolio_FHT,market_FHT)\n",
    "factor['Factor2']=pd.expanding_corr(portfolio_rtn,market_FHT)\n",
    "factor['Factor3']=pd.expanding_corr(portfolio_FHT,market)\n",
    "ind=portfolio_rtn['2001':].index\n",
    "res=sm.OLS(portfolio_rtn.loc[ind],sm.add_constant(factor.loc[ind])).fit()\n",
    "print(res.summary())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 276,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "305"
      ]
     },
     "execution_count": 276,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "market_FHT.count()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 322,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/mrefermat/anaconda3/lib/python3.6/site-packages/ipykernel_launcher.py:7: FutureWarning: how in .resample() is deprecated\n",
      "the new syntax is .resample(...).last()\n",
      "  import sys\n",
      "/Users/mrefermat/anaconda3/lib/python3.6/site-packages/ipykernel_launcher.py:12: FutureWarning: pd.expanding_corr is deprecated for Series and will be removed in a future version, replace with \n",
      "\tSeries.expanding(min_periods=1).corr(other=<Series>)\n",
      "  if sys.path[0] == '':\n",
      "/Users/mrefermat/anaconda3/lib/python3.6/site-packages/ipykernel_launcher.py:13: FutureWarning: pd.expanding_corr is deprecated for Series and will be removed in a future version, replace with \n",
      "\tSeries.expanding(min_periods=1).corr(other=<Series>)\n",
      "  del sys.path[0]\n",
      "/Users/mrefermat/anaconda3/lib/python3.6/site-packages/ipykernel_launcher.py:14: FutureWarning: pd.expanding_corr is deprecated for Series and will be removed in a future version, replace with \n",
      "\tSeries.expanding(min_periods=1).corr(other=<Series>)\n",
      "  \n"
     ]
    },
    {
     "ename": "ValueError",
     "evalue": "cannot reindex from a duplicate axis",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-322-a5b2df54d901>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     12\u001b[0m         \u001b[0mfactor\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'Factor1'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mpd\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mexpanding_corr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mportfolio_amihud\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mmarket_FHT\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     13\u001b[0m         \u001b[0mfactor\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'Factor2'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mpd\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mexpanding_corr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mportfolio_rtn\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mmarket_FHT\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 14\u001b[0;31m         \u001b[0mfactor\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'Factor3'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mpd\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mexpanding_corr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mportfolio_FHT\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mmarket\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     15\u001b[0m         \u001b[0mind\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mportfolio_rtn\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'2001'\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mindex\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     16\u001b[0m         \u001b[0mres\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0msm\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mOLS\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mportfolio_rtn\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mloc\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mind\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0msm\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0madd_constant\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfactor\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mloc\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mind\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcov_type\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m'HAC'\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mcov_kwds\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m{\u001b[0m\u001b[0;34m'maxlags'\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m}\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/anaconda3/lib/python3.6/site-packages/pandas/core/frame.py\u001b[0m in \u001b[0;36m__setitem__\u001b[0;34m(self, key, value)\u001b[0m\n\u001b[1;32m   2329\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2330\u001b[0m             \u001b[0;31m# set column\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 2331\u001b[0;31m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_set_item\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mvalue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   2332\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2333\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m_setitem_slice\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mkey\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mvalue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/anaconda3/lib/python3.6/site-packages/pandas/core/frame.py\u001b[0m in \u001b[0;36m_set_item\u001b[0;34m(self, key, value)\u001b[0m\n\u001b[1;32m   2395\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2396\u001b[0m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_ensure_valid_index\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mvalue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 2397\u001b[0;31m         \u001b[0mvalue\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_sanitize_column\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mvalue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   2398\u001b[0m         \u001b[0mNDFrame\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_set_item\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mkey\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mvalue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2399\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/anaconda3/lib/python3.6/site-packages/pandas/core/frame.py\u001b[0m in \u001b[0;36m_sanitize_column\u001b[0;34m(self, key, value, broadcast)\u001b[0m\n\u001b[1;32m   2545\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2546\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0misinstance\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mvalue\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mSeries\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 2547\u001b[0;31m             \u001b[0mvalue\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mreindexer\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mvalue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   2548\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2549\u001b[0m         \u001b[0;32melif\u001b[0m \u001b[0misinstance\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mvalue\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mDataFrame\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/anaconda3/lib/python3.6/site-packages/pandas/core/frame.py\u001b[0m in \u001b[0;36mreindexer\u001b[0;34m(value)\u001b[0m\n\u001b[1;32m   2537\u001b[0m                     \u001b[0;31m# duplicate axis\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2538\u001b[0m                     \u001b[0;32mif\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0mvalue\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mindex\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mis_unique\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 2539\u001b[0;31m                         \u001b[0;32mraise\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   2540\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2541\u001b[0m                     \u001b[0;31m# other\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/anaconda3/lib/python3.6/site-packages/pandas/core/frame.py\u001b[0m in \u001b[0;36mreindexer\u001b[0;34m(value)\u001b[0m\n\u001b[1;32m   2532\u001b[0m                 \u001b[0;31m# GH 4107\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2533\u001b[0m                 \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 2534\u001b[0;31m                     \u001b[0mvalue\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mvalue\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mreindex\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mindex\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_values\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   2535\u001b[0m                 \u001b[0;32mexcept\u001b[0m \u001b[0mException\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2536\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/anaconda3/lib/python3.6/site-packages/pandas/core/series.py\u001b[0m in \u001b[0;36mreindex\u001b[0;34m(self, index, **kwargs)\u001b[0m\n\u001b[1;32m   2424\u001b[0m     \u001b[0;34m@\u001b[0m\u001b[0mAppender\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mgeneric\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_shared_docs\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'reindex'\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m%\u001b[0m \u001b[0m_shared_doc_kwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2425\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mreindex\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mindex\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mNone\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 2426\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0msuper\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mSeries\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mreindex\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mindex\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mindex\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   2427\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2428\u001b[0m     \u001b[0;34m@\u001b[0m\u001b[0mAppender\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mgeneric\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_shared_docs\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'fillna'\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m%\u001b[0m \u001b[0m_shared_doc_kwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/anaconda3/lib/python3.6/site-packages/pandas/core/generic.py\u001b[0m in \u001b[0;36mreindex\u001b[0;34m(self, *args, **kwargs)\u001b[0m\n\u001b[1;32m   2513\u001b[0m         \u001b[0;31m# perform the reindex on the axes\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2514\u001b[0m         return self._reindex_axes(axes, level, limit, tolerance, method,\n\u001b[0;32m-> 2515\u001b[0;31m                                   fill_value, copy).__finalize__(self)\n\u001b[0m\u001b[1;32m   2516\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2517\u001b[0m     def _reindex_axes(self, axes, level, limit, tolerance, method, fill_value,\n",
      "\u001b[0;32m~/anaconda3/lib/python3.6/site-packages/pandas/core/generic.py\u001b[0m in \u001b[0;36m_reindex_axes\u001b[0;34m(self, axes, level, limit, tolerance, method, fill_value, copy)\u001b[0m\n\u001b[1;32m   2531\u001b[0m             obj = obj._reindex_with_indexers({axis: [new_index, indexer]},\n\u001b[1;32m   2532\u001b[0m                                              \u001b[0mfill_value\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mfill_value\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 2533\u001b[0;31m                                              copy=copy, allow_dups=False)\n\u001b[0m\u001b[1;32m   2534\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2535\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0mobj\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/anaconda3/lib/python3.6/site-packages/pandas/core/generic.py\u001b[0m in \u001b[0;36m_reindex_with_indexers\u001b[0;34m(self, reindexers, fill_value, copy, allow_dups)\u001b[0m\n\u001b[1;32m   2625\u001b[0m                                                 \u001b[0mfill_value\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mfill_value\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2626\u001b[0m                                                 \u001b[0mallow_dups\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mallow_dups\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 2627\u001b[0;31m                                                 copy=copy)\n\u001b[0m\u001b[1;32m   2628\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2629\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mcopy\u001b[0m \u001b[0;32mand\u001b[0m \u001b[0mnew_data\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_data\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/anaconda3/lib/python3.6/site-packages/pandas/core/internals.py\u001b[0m in \u001b[0;36mreindex_indexer\u001b[0;34m(self, new_axis, indexer, axis, fill_value, allow_dups, copy)\u001b[0m\n\u001b[1;32m   3884\u001b[0m         \u001b[0;31m# some axes don't allow reindexing with dups\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3885\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0mallow_dups\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 3886\u001b[0;31m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0maxes\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0maxis\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_can_reindex\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mindexer\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   3887\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3888\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0maxis\u001b[0m \u001b[0;34m>=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mndim\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/anaconda3/lib/python3.6/site-packages/pandas/core/indexes/base.py\u001b[0m in \u001b[0;36m_can_reindex\u001b[0;34m(self, indexer)\u001b[0m\n\u001b[1;32m   2834\u001b[0m         \u001b[0;31m# trying to reindex on an axis with duplicates\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2835\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mis_unique\u001b[0m \u001b[0;32mand\u001b[0m \u001b[0mlen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mindexer\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 2836\u001b[0;31m             \u001b[0;32mraise\u001b[0m \u001b[0mValueError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"cannot reindex from a duplicate axis\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   2837\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2838\u001b[0m     def reindex(self, target, method=None, level=None, limit=None,\n",
      "\u001b[0;31mValueError\u001b[0m: cannot reindex from a duplicate axis"
     ]
    }
   ],
   "source": [
    "final_res_FHT={}\n",
    "for sec in ['Equities', 'Commodities', 'Fixed Income']:\n",
    "    sector_res=pd.DataFrame()\n",
    "    for bucket in ['0','1','2','3','4']:\n",
    "        portfolio_rtn=sector_portfolio_sorts_FHT[sec][bucket]\n",
    "        portoflio_FHT=FHT_values[sec][bucket]\n",
    "        market=cleansed[sector_zscores_FHT[sec].columns].resample(rule='m',how='last').pct_change().median(axis=1).dropna()\n",
    "        market_FHT=FHT[sector_zscores_FHT[sec].columns].median(axis=1)\n",
    "        factor=pd.DataFrame()\n",
    "        factor['Market']=market\n",
    "        factor['E(c_t)']=portfolio_amihud\n",
    "        factor['Factor1']=pd.expanding_corr(portfolio_amihud,market_FHT)\n",
    "        factor['Factor2']=pd.expanding_corr(portfolio_rtn,market_FHT)\n",
    "        factor['Factor3']=pd.expanding_corr(portfolio_FHT,market)\n",
    "        ind=portfolio_rtn['2001':].index\n",
    "        res=sm.OLS(portfolio_rtn.loc[ind],sm.add_constant(factor.loc[ind])).fit(cov_type='HAC',cov_kwds={'maxlags':1})\n",
    "        sector_res['Portfolio '+bucket]=res.params\n",
    "        sector_res['Tstat'+bucket]=res.tvalues\n",
    "    final_res_FHT[sec]=sector_res"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 331,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "7773"
      ]
     },
     "execution_count": 331,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "portfolio_FHT.count()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 332,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "364"
      ]
     },
     "execution_count": 332,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "market.count()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 335,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0    7266\n",
       "1    7531\n",
       "2    7828\n",
       "3    7758\n",
       "4    7773\n",
       "dtype: int64"
      ]
     },
     "execution_count": 335,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "FHT_values['Equities'].count()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
